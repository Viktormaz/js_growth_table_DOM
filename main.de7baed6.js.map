{"version":3,"sources":["scripts/main.js"],"names":["appendRow","document","querySelector","removeRow","appendColumn","removeColumn","table","appendColumnCount","removeColumnCount","min","max","addEventListener","ev","target","rows","length","newRow","cloneNode","append","disabled","deleteRow","row","cells","insertBefore","children","deleteCell"],"mappings":";AAAA,aAaA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAVA,IAAMA,EAAYC,SAASC,cAAc,eACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAeH,SAASC,cAAc,kBACtCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAQL,SAASC,cAAc,SACjCK,EAAoB,EACpBC,EAAoB,EAClBC,EAAM,EACNC,EAAM,GAEZT,SAASU,iBAAiB,QAAS,SAACC,GAC1BA,OAAAA,EAAGC,QACJb,KAAAA,EACCM,GAAAA,EAAMQ,KAAKC,OAASL,EAAK,CACrBM,IAAAA,EAASV,EAAMQ,KAAK,GAAGG,WAAU,GAEvCX,EAAMY,OAAOF,GAGfhB,EAAUmB,SAAWb,EAAMQ,KAAKC,SAAWL,EAC3CP,EAAUgB,UAAW,EACrB,MAEGhB,KAAAA,EACCG,EAAMQ,KAAKC,OAAS,GACtBT,EAAMc,UAAU,GAGlBjB,EAAUgB,SAAWb,EAAMQ,KAAKC,SAAWN,EAC3CT,EAAUmB,UAAW,EACrB,MAEGf,KAAAA,EACeE,IADpB,EACoBA,EAAAA,EAAAA,EAAMQ,MAD1B,IACgC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBO,IAAAA,EAAmB,EAAA,MAC5Bd,EAAoBc,EAAIC,MAAMP,QAFlC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAKMR,GAAAA,EAAoBG,EAAK,CACTJ,IADS,EACTA,EAAAA,EAAAA,EAAMQ,MADG,IACG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBO,IAAAA,EAAmB,EAAA,MAC5BA,EAAIE,aACFF,EAAIG,SAAS,GAAGP,WAAU,GAC1BI,EAAIG,SAASlB,EAAMQ,KAAK,GAAGQ,MAAMP,OAAS,KAJnB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAQ7BR,IACAH,EAAae,SAAWZ,IAAsBG,EAC9CL,EAAac,UAAW,EACxB,MAEGd,KAAAA,EACeC,IADpB,EACoBA,EAAAA,EAAAA,EAAMQ,MAD1B,IACgC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBO,IAAAA,EAAmB,EAAA,MAC5Bb,EAAoBa,EAAIC,MAAMP,QAFlC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAKMP,GAAAA,EAAoBC,EAAK,CACTH,IADS,EACTA,EAAAA,EAAAA,EAAMQ,MADG,IACG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACxBW,WAAW,IAFU,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAM7BjB,IACAH,EAAac,SAAWX,IAAsBC,EAC9CL,EAAae,UAAW","file":"main.de7baed6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('table');\nlet appendColumnCount = 0;\nlet removeColumnCount = 0;\nconst min = 2;\nconst max = 10;\n\ndocument.addEventListener('click', (ev) => {\n  switch (ev.target) {\n    case appendRow:\n      if (table.rows.length < max) {\n        const newRow = table.rows[0].cloneNode(true);\n\n        table.append(newRow);\n      }\n\n      appendRow.disabled = table.rows.length === max;\n      removeRow.disabled = false;\n      break;\n\n    case removeRow:\n      if (table.rows.length > 2) {\n        table.deleteRow(0);\n      }\n\n      removeRow.disabled = table.rows.length === min;\n      appendRow.disabled = false;\n      break;\n\n    case appendColumn:\n      for (const row of table.rows) {\n        appendColumnCount = row.cells.length;\n      }\n\n      if (appendColumnCount < max) {\n        for (const row of table.rows) {\n          row.insertBefore(\n            row.children[0].cloneNode(true),\n            row.children[table.rows[0].cells.length - 1]);\n        }\n      }\n\n      appendColumnCount++;\n      appendColumn.disabled = appendColumnCount === max;\n      removeColumn.disabled = false;\n      break;\n\n    case removeColumn:\n      for (const row of table.rows) {\n        removeColumnCount = row.cells.length;\n      }\n\n      if (removeColumnCount > min) {\n        for (const row of table.rows) {\n          row.deleteCell(0);\n        }\n      }\n\n      removeColumnCount--;\n      removeColumn.disabled = removeColumnCount === min;\n      appendColumn.disabled = false;\n      break;\n  }\n});\n"]}